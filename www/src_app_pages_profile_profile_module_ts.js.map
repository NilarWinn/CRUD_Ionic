{"version":3,"file":"src_app_pages_profile_profile_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEV;AAE7C,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,sDAAW;KACvB;CACF,CAAC;IAMW,wBAAwB,SAAxB,wBAAwB;;AAAxB,wBAAwB;IAJpC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,wBAAwB;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChBI;AACM;AACF;AAEA;AAEuB;AAEvB;IAWhC,iBAAiB,SAAjB,iBAAiB;;AAAjB,iBAAiB;IAT7B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,6EAAwB;SACzB;QACD,YAAY,EAAE,CAAC,sDAAW,CAAC;KAC5B,CAAC;GACW,iBAAiB;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACnBoB;AACT;AACM;AAEW;IAO7C,WAAW,SAAX,WAAW;IAOtB,YAAmB,MAAc,EACvB,GAAgB,EAChB,GAAkB;QAFT,WAAM,GAAN,MAAM,CAAQ;QACvB,QAAG,GAAH,GAAG,CAAa;QAChB,QAAG,GAAH,GAAG,CAAe;QAR5B,YAAO,GAAQ,EAAE,CAAC;QAIlB,aAAQ,GAAG,EAAE,CAAC;IAKd,CAAC;IAED,QAAQ;IACR,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,WAAW,EAAE;IACpB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;YACvC,IAAI,YAAY,GAAS,IAAI,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC;YACzB,IAAI,YAAY,CAAC,OAAO,IAAI,IAAI,EAAE;gBAChC,IAAI,QAAQ,GAAO,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC1C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;aAC7B;YACD,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;QAC5E,CAAC,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAE;IACvB,CAAC;IAED,QAAQ;QACN,IAAI,MAAM,GAAQ;YAChB,MAAM,EAAG,IAAI;YACb,QAAQ,EAAG,IAAI,CAAC,QAAQ;SACzB;QACD,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,wBAAwB,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;IACxE,CAAC;;;;;;;AA1CU,WAAW;IALvB,wDAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,oEAAkC;;KAEnC,CAAC;GACW,WAAW;AAAA","sources":["./src/app/pages/profile/profile-routing.module.ts","./src/app/pages/profile/profile.module.ts","./src/app/pages/profile/profile.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NavController } from '@ionic/angular';\nimport { User } from 'src/app/models/user';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n  userImg: any = '';\n  userData : User;\n  isEdit: Boolean;\n  password : String;\n  userList = [];\n\n  constructor(public router: Router,\n    private api : ApiService,\n    private nav: NavController) { \n  }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n    this.getUserList()\n  }\n\n  getUserList() {\n    this.api.getUserList(1).subscribe(data => {\n      var responseData : any = data;\n      console.log(responseData)\n      if (responseData.success == true) {\n        var dataList:any = responseData.data.docs;\n        this.userData = dataList[0];\n      }\n      this.password = (this.userData.password.toString()).replace(/[0-9]/g, '*')\n    })\n  }\n\n  ionViewWillLeave() {\n    this.userData = null;\n    this.isEdit = false ;\n  }\n\n  goToEdit() {\n    let params: any = {\n      isEdit : true,\n      userData : this.userData\n    }\n    this.nav.navigateForward('main/tabs/add-new-user', { state: params });\n  }\n\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}