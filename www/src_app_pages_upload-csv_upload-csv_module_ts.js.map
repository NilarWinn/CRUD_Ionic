{"version":3,"file":"src_app_pages_upload-csv_upload-csv_module_ts.js","mappings":"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","sources":["./src/app/pages/upload-csv/upload-csv-routing.module.ts","./src/app/pages/upload-csv/upload-csv.module.ts","./src/app/pages/upload-csv/upload-csv.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UploadCsvPage } from './upload-csv.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UploadCsvPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UploadCsvPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UploadCsvPageRoutingModule } from './upload-csv-routing.module';\n\nimport { UploadCsvPage } from './upload-csv.page';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UploadCsvPageRoutingModule\n  ],\n  declarations: [UploadCsvPage]\n})\nexport class UploadCsvPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { FileChooser } from '@ionic-native/file-chooser/ngx';\nimport { FilePath } from '@ionic-native/file-path/ngx';\nimport { File } from '@ionic-native/file/ngx';\nimport { NavController, Platform } from '@ionic/angular';\nimport { IOSFilePicker } from '@ionic-native/file-picker/ngx';\n\n@Component({\n  selector: 'app-upload-csv',\n  templateUrl: './upload-csv.page.html',\n  styleUrls: ['./upload-csv.page.scss'],\n})\nexport class UploadCsvPage implements OnInit {\n\n  fileName = \"file\";\n  uploadForm: FormGroup;\n  constructor(\n    private fileChooser: FileChooser,\n    private filepath : FilePath,\n    private file : File,\n    public formBuilder: FormBuilder,\n    private platform : Platform,\n    private filePicker : IOSFilePicker,\n    private nav: NavController\n  ) { }\n\n  ngOnInit() {\n    this.uploadForm = this.formBuilder.group({\n      fileName: ['', [Validators.required ]],\n    })\n  }\n\n  \n  async selectFile() {\n    // this.fileName = '';\n    if(this.platform.is('android')){\n      const selectedFile : string = await this.fileChooser.open()\n      const resolvedPath = await this.filepath.resolveNativePath(selectedFile);\n      const fileEntry = await this.file.resolveLocalFilesystemUrl(resolvedPath) as any;\n      fileEntry.file((fileInfo)=>{\n        var fileData: any = fileInfo;\n        console.log('File Info ', fileInfo);\n        this.fileName = fileData.name.toString();\n        this.uploadForm.controls.fileName.setValue(this.fileName)\n\n        console.log('File Info ', fileData.name);\n          //sample response file mime type size etc you can use it as per your requirement\n          // end: 3028\n          // lastModified: 1610953273000\n          // lastModifiedDate: 1610953273000\n          // localURL: \"cdvfile://localhost/sdcard/Download/sample.pdf\"\n          // name: \"sample.pdf\"\n          // size: 3028\n          // start: 0\n          // type: \"application/pdf\"\n      })\n  }else{\n      //For ios device \n      const selectedFile : string = await  this.filePicker.pickFile() ;\n      const fileEntry = await this.file.resolveLocalFilesystemUrl('file:///'+selectedFile) as any;\n      fileEntry.file((fileInfo)=>{\n        console.log('File Info ', fileInfo);\n        var fileData: any = fileInfo;\n        console.log('File Info ', fileInfo);\n        this.fileName = fileData.name.toString();\n        this.uploadForm.controls.fileName.setValue(this.fileName)\n\n        console.log('File Info ', fileData.name);\n      })\n  }\n  }\n\n  importFile() {\n    // call api\n  }\n\n}\n"],"names":["Component","FormBuilder","Validators","FileChooser","FilePath","File","NavController","Platform","IOSFilePicker","UploadCsvPage","constructor","fileChooser","filepath","file","formBuilder","platform","filePicker","nav","ngOnInit","uploadForm","group","fileName","required","selectFile","is","selectedFile","open","resolvedPath","resolveNativePath","fileEntry","resolveLocalFilesystemUrl","fileInfo","fileData","console","log","name","toString","controls","setValue","pickFile","importFile","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}